import { db } from "../lib/firebase";
/**
 * @param  {} user
 * Binds Firebase user subscription data stored in Firestore
 */
export async function parseUser(user) {
  const { uid } = user;
  try {
    const subscription = await db
      .collection("users")
      .doc(uid)
      .collection("private")
      .doc("subscription")
      .get();
    console.log(subscription.data());

    return { ...user, ...subscription.data() };
  } catch (e) {
    console.log(e);
    return { ...user, subscriptionType: false };
  }
}
/**
 *
 *
 *
 * @param  {} user
 * Saves name and email of the user to Firestore database
 * The doc id is the uid token
 */
export async function saveUserToFirestore(user) {
  try {
    const { uid, email, displayName: name } = user;
    await db.collection("users").doc(uid).set({ email, name }, { merge: true });
  } catch (e) {
    console.log("An error happened while saving the user to Firestore", e);
  }
}
/**
 *
 *
 *
 *
 * @param  {string} fontName
 * @param  {} user
 *
 * Save to Firestore the unliked font
 * Doc id autogenerated, doc fields: fontName
 */
export async function blacklistFont(fontName, user) {
  const { uid } = user;
  db.collection("users")
    .doc(uid)
    .collection("unlikedFonts")
    .doc()
    .set({ fontName });
}
